{"version":3,"sources":["components/3dviewer/ThreeScene.tsx","utils/three/ObjectFactory.tsx","components/3dviewer/TestBoxScene.tsx","components/3dviewer/CoordinateAxisScene.tsx","components/chart/Scatter.tsx","scene/Scene1.tsx","components/menu/BubbleMenu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ThreeScene","props","_scene","_camera","_renderer","_mount","_frameId","_objects","_cnt","state","camera_pos_x","THREE","width","height","position","x","cameraPos","y","z","lookAt","antialias","setSize","setClearColor","onButtonClick","bind","animate","createObjects","this","map","obj","add","appendChild","domElement","start","stop","removeChild","requestAnimationFrame","cancelAnimationFrame","render","window","remove","apply","children","ambientLight","spotLight","set","castShadow","setState","style","ref","mount","Button","variant","color","onClick","React","Component","ObjectFactory","pos_x","pos_y","pos_z","radius","opacity","sphereRadius","sphereGeometry","sphereMaterial","transparent","side","depthWrite","sphere","size_x","size_y","size_z","box","receiveShadow","rotation_x","Math","PI","rotation_y","rotation_z","size_h","size_w","planeGeometry","planeMaterial","plane","rotation","name","dir_x","dir_y","dir_z","length","headWidth","headLength","dir","pos","arrowHelper","scale","material","sprite","TestBoxScene","onObjectsUpdated","forceUpdate","idx","findIndex","tag","objs","push","OF","createBox","objType","createArrow","StyledChart","styled","div","Scatter","_data","labels","datasets","label","fill","backgroundColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","redraw","Scene1","scatterRef","createRef","i","random","current","setData","styles","bmBurgerButton","left","top","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","bmMorphShape","bmItemList","bmItem","display","outline","bmOverlay","BubbleMenu","_SCENE_LIST","onStateChange","console","log","isOpen","items","e","id","className","href","BurgerMenu","document","getElementById","App","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.166b9bd2.chunk.js","sourcesContent":["import React from 'react';\nimport * as THREE from 'three';\nimport Button from '@material-ui/core/Button';\n\n\ntype Vec3 = {\n  x: number,\n  y: number,\n  z: number,\n};\n\nexport type ThreeObject = {\n  tag?: string,\n  obj: THREE.Mesh | THREE.ArrowHelper | THREE.Sprite,\n  objType: 'box' | 'sphere' | 'plane' | 'sprite' | 'arrow' | 'other',\n}\n\nexport type ThreeObjects = ThreeObject[];\n\nexport interface Props {\n  width: number,\n  height: number,\n  cameraPos: Vec3,\n  onObjectsChanged?: (objs: ThreeObjects) => {},\n};\n\n\nexport class ThreeScene extends React.Component<Props> {\n\n  protected _scene: THREE.Scene;\n  protected _camera: THREE.PerspectiveCamera;\n  protected _renderer: THREE.WebGLRenderer;\n  protected _mount: HTMLDivElement | null = null;\n  protected _frameId: number | null = null;\n  protected _objects: ThreeObjects = [];\n  protected _cnt: number = 0;\n\n  state = {\n    camera_pos_x: 0\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this._scene = new THREE.Scene();\n\n    const width = this.props.width;\n    const height = this.props.height;\n    this._camera = new THREE.PerspectiveCamera(\n      45,\n      width / height,\n      0.1,\n      1000\n    );\n\n    this._camera.position.x = this.props.cameraPos.x;\n    this._camera.position.y = this.props.cameraPos.y;\n    this._camera.position.z = this.props.cameraPos.z;\n\n    this._camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n    this._renderer = new THREE.WebGLRenderer({ antialias: true });\n    this._renderer.setSize(width, height);\n    this._renderer.setClearColor('#b4bad2');\n\n    this.onButtonClick = this.onButtonClick.bind(this);\n    this.animate = this.animate.bind(this);\n    this.createObjects = this.createObjects.bind(this);\n\n  }\n\n  componentDidMount(): void {\n    this._objects.map(obj => this._scene.add(obj.obj));\n    if (this._mount) {\n      this._mount.appendChild(this._renderer.domElement);\n    }\n    this.start();\n  }\n\n  componentWillUnmount(): void {\n    this.stop()\n    if (this._mount) {\n      this._mount.removeChild(this._renderer.domElement);\n    }\n  }\n\n  start(): void {\n    if (!this._frameId) {\n      this._frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  stop(): void {\n    if (this._frameId) {\n      cancelAnimationFrame(this._frameId);\n    }\n  }\n\n  animate(): void {\n    this._cnt += 1;\n    this._renderer.render(this._scene, this._camera);\n    this._frameId = window.requestAnimationFrame(this.animate);\n  }\n\n  createObjects(): ThreeObjects {\n    return [];\n  }\n\n  onObjectsUpdated(): void {\n    this._scene.remove.apply(this._scene, this._scene.children);\n    this._objects.map(obj => this._scene.add(obj.obj));\n\n    const ambientLight = new THREE.AmbientLight(0x222222);\n    this._scene.add(ambientLight);\n\n    const spotLight = new THREE.SpotLight(0xffffff);\n    spotLight.position.set(10, 10, 10);\n    spotLight.castShadow = true;\n    this._scene.add(spotLight);\n  }\n\n  onButtonClick(): void {\n    this._camera.position.x += 1;\n    this.setState({camera_pos_x: this.state.camera_pos_x + 1});\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          style={{ width: this.props.width, height: this.props.height }}\n          ref={(mount) => { this._mount = mount }}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={this.onButtonClick}>\n          {this._camera.position.x}\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default ThreeScene;\n","import * as THREE from 'three';\n\n\nexport class ObjectFactory {\n\n  static createSphere(\n    pos_x: number = 0.0,\n    pos_y: number = 0.0,\n    pos_z: number = 0.0,\n    radius: number = 1.0,\n    opacity: number = 1.0,\n    color: number = 0x22DD22,\n  ): THREE.Mesh {\n    const sphereRadius = radius;\n    const sphereGeometry = new THREE.SphereGeometry(sphereRadius, 20, 20);\n    const sphereMaterial = new THREE.MeshLambertMaterial({\n      color: color,\n      opacity: opacity,\n      transparent: true,\n      side: THREE.DoubleSide,\n      depthWrite: false\n    })\n    const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n\n    sphere.position.x = pos_x;\n    sphere.position.y = pos_y;\n    sphere.position.z = pos_z;\n    sphere.castShadow = true;\n\n    return sphere;\n  }\n\n  static createBox(\n    pos_x: number = 0,\n    pos_y: number = 0,\n    pos_z: number = 0,\n    size_x: number = 1.0,\n    size_y: number = 1.0,\n    size_z: number = 1.0,\n    opacity: number = 1.0,\n    color: number = 0xff0000,\n  ): THREE.Mesh {\n    const box = new THREE.Mesh(\n        new THREE.BoxGeometry(size_x, size_y, size_z),\n        new THREE.MeshLambertMaterial({\n          color: color,\n          opacity: opacity,\n          transparent: true,\n          side: THREE.DoubleSide,\n          depthWrite: false\n        })\n    );\n    box.receiveShadow = true;\n\n    box.position.set(pos_x, pos_y, pos_z);\n    return box;\n  }\n\n  static createPlane(\n    pos_x: number = 0,\n    pos_y: number = 0,\n    pos_z: number = 0,\n    rotation_x: number = -0.5*Math.PI, \n    rotation_y: number = 0,\n    rotation_z: number = 0,\n    color: number = 0xff0000,\n    size_h: number = 50,\n    size_w:number = 50,\n  ): THREE.Mesh {\n    const planeGeometry = new THREE.PlaneGeometry(size_w, size_h, 1, 1);\n    const planeMaterial = new THREE.MeshLambertMaterial({color: color});\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    plane.receiveShadow = true;\n\n    plane.rotation.x = rotation_x;\n    plane.rotation.y = rotation_y;\n    plane.rotation.z = rotation_z;\n    plane.position.x = pos_x;\n    plane.position.y = pos_y;\n    plane.position.z = pos_z;\n\n    return plane;\n  }\n\n  static createArrow(\n    name: string,\n    pos_x: number = 0,\n    pos_y: number = 0,\n    pos_z: number = 0,\n    dir_x: number = 0,\n    dir_y: number = 1,\n    dir_z: number = 0,\n    rotation_x: number = -Math.PI,\n    rotation_y: number = 0,\n    rotation_z: number = 0,\n    length: number = 0.8,\n    color: number = 0x00ff00,\n    headWidth: number = 0.3,\n    headLength: number = 0.3\n  ): THREE.ArrowHelper {\n    const dir = new THREE.Vector3(dir_x, dir_y, dir_z);\n    const pos = new THREE.Vector3(pos_x, pos_y, pos_z);\n    const arrowHelper = new THREE.ArrowHelper(dir, pos, length, color, \n                                              headWidth, headLength);\n    arrowHelper.name = name;\n    arrowHelper.rotation.x = rotation_x;\n    arrowHelper.rotation.y = rotation_y;\n    arrowHelper.rotation.z = rotation_z;\n\n    return arrowHelper;\n  }\n\n  static createSprite(\n    pos_x: number = 0,\n    pos_y: number = 0,\n    pos_z: number = 0,\n    scale: number = 0.2,\n    color: number = 0x0000ee,\n  ): THREE.Sprite {\n    const material = new THREE.SpriteMaterial({color: color});\n    const sprite = new THREE.Sprite(material);\n    sprite.position.x = pos_x;\n    sprite.position.y = pos_y;\n    sprite.position.z = pos_z;\n    sprite.scale.x = scale;\n    sprite.scale.y = scale;\n    sprite.scale.z = scale;\n\n    return sprite;\n  }\n}\n\nexport default ObjectFactory;\n","import { Props as ThreeProps, ThreeObjects } from './ThreeScene';\nimport CoordinateAxisScene from './CoordinateAxisScene';\nimport { ObjectFactory as OF } from '../../utils/three/ObjectFactory';\n\n\ntype Props = ThreeProps;\n\nclass TestBoxScene extends CoordinateAxisScene {\n\n  constructor(props: Props) {\n    super(props);\n\n    this.animate = this.animate.bind(this);\n    this.createObjects = this.createObjects.bind(this);\n\n    this._objects = this.createObjects();\n    this.onObjectsUpdated();\n\n    this.forceUpdate();\n  }\n\n  animate(): void {\n    const idx = this._objects.findIndex(obj => obj.tag === 'box1');\n    this._objects[idx].obj.rotation.x += 0.01;\n    this._objects[idx].obj.rotation.y += 0.01;\n    super.animate();\n  }\n\n  createObjects(): ThreeObjects {\n    const objs = super.createObjects();\n\n    objs.push({\n      tag: 'box1',\n      obj: OF.createBox(0.0, 0.0, 0.0),\n      objType: 'box'\n    }) \n    return objs;\n  }\n}\n\nexport default TestBoxScene;\n","import { Props as ThreeProps, ThreeScene, ThreeObjects } from './ThreeScene';\nimport { ObjectFactory as OF } from '../../utils/three/ObjectFactory';\n\n\n// interface Props extends ThreeProps {\n//   axis_length: number;\n// }\ninterface Props extends ThreeProps {};\n\n\nclass CoordinateAxisScene extends ThreeScene {\n\n  // protected _axis_length: number = 1.0;\n\n  constructor(props: Props) {\n    super(props as ThreeProps);\n\n    // if (props.axis_length !== null) {\n    //   this._axis_length = props.axis_length;\n    // }\n\n    this.animate = this.animate.bind(this);\n    this.createObjects = this.createObjects.bind(this);\n\n    this.forceUpdate();\n  }\n\n  animate(): void {\n    super.animate();\n  }\n\n  createObjects(): ThreeObjects {\n    const objs: ThreeObjects = super.createObjects();\n\n    objs.push({\n      tag: 'x_axis',\n      obj: OF.createArrow(\n        'x_axis',\n        0, 0, 0,\n        1.0, 0.0, 0.0,\n        0.5*Math.PI, 0.0, 0,\n        6.0, //this._axis_length,\n        0xFF0000,\n        0.5, //this._axis_length/5,\n        0.5, //this._axis_length/5,\n      ),\n      objType: 'arrow'\n    })\n\n    objs.push({\n      tag: 'y_axis',\n      obj: OF.createArrow(\n        'y_axis',\n        0, 0, 0,\n        0.0, 1.0, 0.0,\n        0, 0.5*Math.PI, 0,\n        6.0,\n        0x00FF00,\n        0.6, 0.6,\n      ),\n      objType: 'arrow'\n    })\n\n    objs.push({\n      tag: 'z_axis',\n      obj: OF.createArrow(\n        'z_axis',\n        0, 0, 0,\n        0.0, 0.0, 1.0,\n        0, 0, 0.5*Math.PI,\n        6.0,\n        0x0000FF,\n        0.6, 0.6,\n      ),\n      objType: 'arrow'\n    }) \n    return objs;\n  }\n}\n\nexport default CoordinateAxisScene;\n","import React from 'react';\nimport { Scatter as ChartScatter } from 'react-chartjs-2';\nimport styled from 'styled-components';\n\n\nconst StyledChart = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 30%;\n`\n\ninterface Data {\n  x: number,\n  y: number,\n};\n\nexport type DataType = Data[];\n\ntype Props= {}\n\nexport class Scatter extends React.Component<Props> {\n\n  private _data: any = null;\n\n  constructor(props: Props) {\n    super(props);\n\n    this._data = {\n      labels: ['Scatter'],\n      datasets: [\n        {\n          label: 'scatter',\n          fill: true,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 2,\n          pointHoverRadius: 1,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 5,\n          pointHitRadius: 5,\n          data: [\n            { x: 0, y: 0 },\n          ]\n        }\n      ]\n    };\n\n  }\n\n  componentDidMount(): void {\n    this._data.datasets[0].data = [\n      {x: 0, y: 0},\n      {x: 1, y: 1},\n      {x: 2, y: 2},\n      {x: 3, y: 3},\n      {x: 4, y: 4},\n    ];\n\n    this.forceUpdate();\n  }\n\n  setData(data: DataType) {\n    this._data.datasets[0].data = data;\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <StyledChart>\n        <ChartScatter data={this._data} redraw />\n      </StyledChart>\n    )\n  }\n}\n\nexport default Scatter;\n","import React from 'react';\nimport TestBoxScene from '../components/3dviewer/TestBoxScene';\nimport { Scatter, DataType as ScatterDataType } from '../components/chart/Scatter';\nimport Button from '@material-ui/core/Button';\n\n\ntype Props= {}\n\nexport class Scene1 extends React.Component<Props> {\n\n  private scatterRef = React.createRef<Scatter>();\n\n  constructor(props: Props) {\n    super(props);\n\n    this.onButtonClick = this.onButtonClick.bind(this);\n  }\n\n  private onButtonClick(): void {\n    const data: ScatterDataType = [];\n    for (let i=0; i < 10; i++) {\n      data.push({\n        x: Math.random(),\n        y: Math.random()\n      });\n    }\n    this.scatterRef.current!.setData(data);\n  }\n\n  render() {\n    return (\n      <div>\n        <TestBoxScene width={2000} height={800} cameraPos={{x: 5, y: 5, z: 5}} />\n        <Scatter ref={this.scatterRef} />\n        <Button variant=\"contained\" color=\"primary\" onClick={this.onButtonClick}>\n          update data a\n        </Button>\n      </div>\n    );\n  }\n\n}\n\nexport default Scene1;\n","import React from 'react';\nimport { bubble as BurgerMenu } from 'react-burger-menu';\nimport Scene1 from '../../scene/Scene1';\nimport { render } from 'react-dom';\n\n\ninterface State {\n  isOpen: boolean;\n}\n\ninterface Styles {\n  bmBurgerBars: Partial<CSSStyleDeclaration>;\n  bmBurgerBarsHover: Partial<CSSStyleDeclaration>;\n  bmBurgerButton: Partial<CSSStyleDeclaration>;\n  bmCross: Partial<CSSStyleDeclaration>;\n  bmCrossButton: Partial<CSSStyleDeclaration>;\n  bmItemList: Partial<CSSStyleDeclaration>;\n  bmItem: Partial<CSSStyleDeclaration>;\n  bmMenuWrap: Partial<CSSStyleDeclaration>;\n  bmMenu: Partial<CSSStyleDeclaration>;\n  bmMorphShape: Partial<CSSStyleDeclaration>;\n  bmOverlay: Partial<CSSStyleDeclaration>;\n}\n\ninterface Props {\n  bodyClassName?: string;\n  burgerBarClassName?: string;\n  burgerButtonClassName?: string;\n  className?: string;\n  crossButtonClassName?: string;\n  crossClassName?: string;\n  customBurgerIcon?: JSX.Element | false;\n  customCrossIcon?: JSX.Element | false;\n  customOnKeyDown?(event: React.KeyboardEvent): void;\n  disableAutoFocus?: boolean;\n  disableCloseOnEsc?: boolean;\n  disableOverlayClick?: boolean;\n  htmlClassName?: string;\n  id?: string;\n  isOpen?: boolean;\n  itemClassName?: string;\n  itemListClassName?: string;\n  menuClassName?: string;\n  morphShapeClassName?: string;\n  noOverlay?: boolean;\n  onStateChange?(state: State): void;\n  // TODO (Rajab) This can be improved, though I do not know how. From PropTypes:\n  // styles && styles.outerContainer ? PropTypes.string.isRequired : PropTypes.string\n  outerContainerId?: string;\n  overlayClassName?: string;\n  // TODO (Rajab) This can be improved, though I do not know how. From PropTypes:\n  // styles && styles.pageWrap ? PropTypes.string.isRequired : PropTypes.string,\n  pageWrapId?: string;\n  right?: boolean;\n  styles?: Styles;\n  width?: number | string;\n}\n\nconst styles = {\n  bmBurgerButton: {\n    position: 'fixed',\n    width: '36px',\n    height: '30px',\n    left: '36px',\n    top: '36px'\n  },\n  bmBurgerBars: {\n    background: '#373a47'\n  },\n  bmBurgerBarsHover: {\n    background: '#a90000'\n  },\n  bmCrossButton: {\n    height: '24px',\n    width: '24px'\n  },\n  bmCross: {\n    background: '#bdc3c7'\n  },\n  bmMenuWrap: {\n    position: 'fixed',\n    height: '100%'\n  },\n  bmMenu: {\n    background: '#373a47',\n    padding: '0.5em 1.5em 0',\n    fontSize: '1.5em'\n  },\n  bmMorphShape: {\n    fill: '#373a47'\n  },\n  bmItemList: {\n    color: '#b8b7ad',\n    padding: '0.8em'\n  },\n  bmItem: {\n    display: 'inline-block',\n    padding: '0.6em',\n    color: '#fffce1',\n    outline: 'none'\n  },\n  bmOverlay: {\n    background: 'rgba(0, 0, 0, 0.3)'\n  }\n}\n\n\nexport class BubbleMenu extends React.Component<Props> {\n\n  private _SCENE_LIST: string[] = [\n    'Scene2', 'Scene3', 'Scene4'\n  ];\n\n  render() {\n    const items = this._SCENE_LIST.map(e => {\n      return (\n        <a id={e} className=\"menu-item\" href=\"/\">{e}</a>\n      )\n    })\n    return (\n      <div className=\"App\">\n        <BurgerMenu\n          styles={styles}\n          onStateChange={this.onStateChange}\n        >\n          <a id='Scene1' className=\"menu-item\" href=\"/#\" onClick={e => render(<Scene1/>, document.getElementById('scene'))}>Scene1</a>\n          {items}\n        </BurgerMenu>\n      </div>\n    )\n  }\n\n  onStateChange = (state: State): void => {\n    console.log(state.isOpen);\n  }\n}\n\nexport default BubbleMenu;\n","import React from 'react';\nimport BubbleMenu from './components/menu/BubbleMenu';\nimport './App.css';\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <BubbleMenu />\n      <div id='scene'></div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}