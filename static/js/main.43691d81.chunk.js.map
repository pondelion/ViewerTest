{"version":3,"sources":["components/3dviewer/ThreeScene.tsx","utils/three/ObjectFactory.tsx","components/3dviewer/TestBoxScene.tsx","components/chart/Scatter.tsx","scene/Scene1.tsx","components/menu/BubbleMenu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ThreeScene","props","_scene","_camera","_renderer","_mount","_frameId","_objects","_cnt","state","camera_pos_x","THREE","width","height","position","x","cameraPos","y","z","lookAt","antialias","setSize","setClearColor","onButtonClick","bind","animate","createObjects","this","map","obj","add","appendChild","domElement","start","stop","removeChild","requestAnimationFrame","cancelAnimationFrame","render","window","remove","apply","children","ambientLight","spotLight","set","castShadow","setState","style","ref","mount","Button","variant","color","onClick","React","Component","ObjectFactory","pos_x","pos_y","pos_z","radius","opacity","sphereRadius","sphereGeometry","sphereMaterial","transparent","side","depthWrite","sphere","size_x","size_y","size_z","box","receiveShadow","rotation_x","Math","PI","rotation_y","rotation_z","size_h","size_w","planeGeometry","planeMaterial","plane","rotation","name","dir_x","dir_y","dir_z","length","headWidth","headLength","dir","pos","arrowHelper","scale","material","sprite","TestBoxScene","onObjectsUpdated","forceUpdate","objs","push","tag","OF","createBox","objType","StyledChart","styled","div","Scatter","_data","labels","datasets","label","fill","backgroundColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","redraw","Scene1","scatterRef","createRef","i","random","current","setData","styles","bmBurgerButton","left","top","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","bmMorphShape","bmItemList","bmItem","display","outline","bmOverlay","BubbleMenu","_SCENE_LIST","onStateChange","console","log","isOpen","items","e","id","className","href","BurgerMenu","document","getElementById","App","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43691d81.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as THREE from 'three';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\ntype Vec3 = {\r\n  x: number,\r\n  y: number,\r\n  z: number,\r\n};\r\n\r\nexport type ThreeObject = {\r\n  tag?: string,\r\n  obj: THREE.Mesh | THREE.ArrowHelper | THREE.Sprite,\r\n  objType: 'box' | 'sphere' | 'plane' | 'sprite' | 'arrow' | 'other',\r\n}\r\n\r\nexport type ThreeObjects = ThreeObject[];\r\n\r\nexport interface Props {\r\n  width: number,\r\n  height: number,\r\n  cameraPos: Vec3,\r\n  onObjectsChanged?: (objs: ThreeObjects) => {},\r\n};\r\n\r\n\r\nclass ThreeScene extends React.Component<Props> {\r\n\r\n  protected _scene: THREE.Scene;\r\n  protected _camera: THREE.PerspectiveCamera;\r\n  protected _renderer: THREE.WebGLRenderer;\r\n  protected _mount: HTMLDivElement | null = null;\r\n  protected _frameId: number | null = null;\r\n  protected _objects: ThreeObjects = [];\r\n  protected _cnt: number = 0;\r\n\r\n  state = {\r\n    camera_pos_x: 0\r\n  };\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this._scene = new THREE.Scene();\r\n\r\n    const width = this.props.width;\r\n    const height = this.props.height;\r\n    this._camera = new THREE.PerspectiveCamera(\r\n      45,\r\n      width / height,\r\n      0.1,\r\n      1000\r\n    );\r\n\r\n    this._camera.position.x = this.props.cameraPos.x;\r\n    this._camera.position.y = this.props.cameraPos.y;\r\n    this._camera.position.z = this.props.cameraPos.z;\r\n\r\n    this._camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\r\n    this._renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this._renderer.setSize(width, height);\r\n    this._renderer.setClearColor('#b4bad2');\r\n\r\n    this.onButtonClick = this.onButtonClick.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n    this.createObjects = this.createObjects.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    this._objects.map(obj => this._scene.add(obj.obj));\r\n    if (this._mount) {\r\n      this._mount.appendChild(this._renderer.domElement);\r\n    }\r\n    this.start();\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    this.stop()\r\n    if (this._mount) {\r\n      this._mount.removeChild(this._renderer.domElement);\r\n    }\r\n  }\r\n\r\n  start(): void {\r\n    if (!this._frameId) {\r\n      this._frameId = requestAnimationFrame(this.animate);\r\n    }\r\n  }\r\n\r\n  stop(): void {\r\n    if (this._frameId) {\r\n      cancelAnimationFrame(this._frameId);\r\n    }\r\n  }\r\n\r\n  animate(): void {\r\n    this._cnt += 1;\r\n    this._renderer.render(this._scene, this._camera);\r\n    this._frameId = window.requestAnimationFrame(this.animate);\r\n  }\r\n\r\n  createObjects(): ThreeObjects {\r\n    return [];\r\n  }\r\n\r\n  onObjectsUpdated(): void {\r\n    this._scene.remove.apply(this._scene, this._scene.children);\r\n    this._objects.map(obj => this._scene.add(obj.obj));\r\n\r\n    const ambientLight = new THREE.AmbientLight(0x222222);\r\n    this._scene.add(ambientLight);\r\n\r\n    const spotLight = new THREE.SpotLight(0xffffff);\r\n    spotLight.position.set(10, 10, 10);\r\n    spotLight.castShadow = true;\r\n    this._scene.add(spotLight);\r\n  }\r\n\r\n  onButtonClick(): void {\r\n    this._camera.position.x += 1;\r\n    this.setState({camera_pos_x: this.state.camera_pos_x + 1});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{ width: this.props.width, height: this.props.height }}\r\n          ref={(mount) => { this._mount = mount }}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.onButtonClick}>\r\n          {this._camera.position.x}\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ThreeScene;\r\n","import * as THREE from 'three';\r\n\r\n\r\nexport class ObjectFactory {\r\n\r\n  static createSphere(\r\n    pos_x: number = 0.0,\r\n    pos_y: number = 0.0,\r\n    pos_z: number = 0.0,\r\n    radius: number = 1.0,\r\n    opacity: number = 1.0,\r\n    color: number = 0x22DD22,\r\n  ): THREE.Mesh {\r\n    const sphereRadius = radius;\r\n    const sphereGeometry = new THREE.SphereGeometry(sphereRadius, 20, 20);\r\n    const sphereMaterial = new THREE.MeshLambertMaterial({\r\n      color: color,\r\n      opacity: opacity,\r\n      transparent: true,\r\n      side: THREE.DoubleSide,\r\n      depthWrite: false\r\n    })\r\n    const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\r\n\r\n    sphere.position.x = pos_x;\r\n    sphere.position.y = pos_y;\r\n    sphere.position.z = pos_z;\r\n    sphere.castShadow = true;\r\n\r\n    return sphere;\r\n  }\r\n\r\n  static createBox(\r\n    pos_x: number = 0,\r\n    pos_y: number = 0,\r\n    pos_z: number = 0,\r\n    size_x: number = 1.0,\r\n    size_y: number = 1.0,\r\n    size_z: number = 1.0,\r\n    opacity: number = 1.0,\r\n    color: number = 0xff0000,\r\n  ): THREE.Mesh {\r\n    const box = new THREE.Mesh(\r\n        new THREE.BoxGeometry(size_x, size_y, size_z),\r\n        new THREE.MeshLambertMaterial({\r\n          color: color,\r\n          opacity: opacity,\r\n          transparent: true,\r\n          side: THREE.DoubleSide,\r\n          depthWrite: false\r\n        })\r\n    );\r\n    box.receiveShadow = true;\r\n\r\n    box.position.set(pos_x, pos_y, pos_z);\r\n    return box;\r\n  }\r\n\r\n  static createPlane(\r\n    pos_x: number = 0,\r\n    pos_y: number = 0,\r\n    pos_z: number = 0,\r\n    rotation_x: number = -0.5*Math.PI, \r\n    rotation_y: number = 0,\r\n    rotation_z: number = 0,\r\n    color: number = 0xff0000,\r\n    size_h: number = 50,\r\n    size_w:number = 50,\r\n  ): THREE.Mesh {\r\n    const planeGeometry = new THREE.PlaneGeometry(size_w, size_h, 1, 1);\r\n    const planeMaterial = new THREE.MeshLambertMaterial({color: color});\r\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\r\n    plane.receiveShadow = true;\r\n\r\n    plane.rotation.x = rotation_x;\r\n    plane.rotation.y = rotation_y;\r\n    plane.rotation.z = rotation_z;\r\n    plane.position.x = pos_x;\r\n    plane.position.y = pos_y;\r\n    plane.position.z = pos_z;\r\n\r\n    return plane;\r\n  }\r\n\r\n  static createArrow(\r\n    name: string,\r\n    pos_x: number = 0,\r\n    pos_y: number = 0,\r\n    pos_z: number = 0,\r\n    dir_x: number = 0,\r\n    dir_y: number = 1,\r\n    dir_z: number = 0,\r\n    rotation_x: number = -Math.PI,\r\n    rotation_y: number = 0,\r\n    rotation_z: number = 0,\r\n    length: number = 0.8,\r\n    color: number = 0x00ff00,\r\n    headWidth: number = 0.3,\r\n    headLength: number = 0.3\r\n  ): THREE.ArrowHelper {\r\n    const dir = new THREE.Vector3(dir_x, dir_y, dir_z);\r\n    const pos = new THREE.Vector3(pos_x, pos_y, pos_z);\r\n    const arrowHelper = new THREE.ArrowHelper(dir, pos, length, color, \r\n                                              headWidth=headWidth,\r\n                                              headLength=headLength);\r\n    arrowHelper.name = name;\r\n    arrowHelper.rotation.x = rotation_x;\r\n    arrowHelper.rotation.y = rotation_y;\r\n    arrowHelper.rotation.z = rotation_z;\r\n\r\n    return arrowHelper;\r\n  }\r\n\r\n  static createSprite(\r\n    pos_x: number = 0,\r\n    pos_y: number = 0,\r\n    pos_z: number = 0,\r\n    scale: number = 0.2,\r\n    color: number = 0x0000ee,\r\n  ): THREE.Sprite {\r\n    const material = new THREE.SpriteMaterial({color: color});\r\n    const sprite = new THREE.Sprite(material);\r\n    sprite.position.x = pos_x;\r\n    sprite.position.y = pos_y;\r\n    sprite.position.z = pos_z;\r\n    sprite.scale.x = scale;\r\n    sprite.scale.y = scale;\r\n    sprite.scale.z = scale;\r\n\r\n    return sprite;\r\n  }\r\n}\r\n\r\nexport default ObjectFactory;\r\n","import React from 'react';\r\nimport * as THREE from 'three';\r\nimport ThreeScene from './ThreeScene';\r\nimport { ThreeObject, ThreeObjects } from './ThreeScene';\r\nimport { Props as ThreeProps } from './ThreeScene';\r\nimport { ObjectFactory as OF } from '../../utils/three/ObjectFactory';\r\n\r\n\r\ntype Props = ThreeProps;\r\n\r\nclass TestBoxScene extends ThreeScene {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.animate = this.animate.bind(this);\r\n    this.createObjects = this.createObjects.bind(this);\r\n\r\n    this._objects = this.createObjects();\r\n    this.onObjectsUpdated();\r\n\r\n    this.forceUpdate();\r\n  }\r\n\r\n  animate(): void {\r\n    this._objects[0].obj.rotation.x += 0.01;\r\n    this._objects[0].obj.rotation.y += 0.01;\r\n    super.animate();\r\n  }\r\n\r\n  createObjects(): ThreeObjects {\r\n    const objs: ThreeObjects = [];\r\n    objs.push({\r\n      tag: 'box1',\r\n      obj: OF.createBox(0.0, 0.0, 0.0),\r\n      objType: 'box'\r\n    }) \r\n    return objs;\r\n  }\r\n}\r\n\r\nexport default TestBoxScene;\r\n","import React from 'react';\r\nimport { Scatter as ChartScatter } from 'react-chartjs-2';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst StyledChart = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 30%;\r\n`\r\n\r\ninterface Data {\r\n  x: number,\r\n  y: number,\r\n};\r\n\r\nexport type DataType = Data[];\r\n\r\ntype Props= {}\r\n\r\nexport class Scatter extends React.Component<Props> {\r\n\r\n  private _data: any = null;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this._data = {\r\n      labels: ['Scatter'],\r\n      datasets: [\r\n        {\r\n          label: 'scatter',\r\n          fill: true,\r\n          backgroundColor: 'rgba(75,192,192,0.4)',\r\n          pointBorderColor: 'rgba(75,192,192,1)',\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 2,\r\n          pointHoverRadius: 1,\r\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 5,\r\n          pointHitRadius: 5,\r\n          data: [\r\n            { x: 0, y: 0 },\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    this._data.datasets[0].data = [\r\n      {x: 0, y: 0},\r\n      {x: 1, y: 1},\r\n      {x: 2, y: 2},\r\n      {x: 3, y: 3},\r\n      {x: 4, y: 4},\r\n    ];\r\n\r\n    this.forceUpdate();\r\n  }\r\n\r\n  setData(data: DataType) {\r\n    this._data.datasets[0].data = data;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StyledChart>\r\n        <ChartScatter data={this._data} redraw />\r\n      </StyledChart>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Scatter;\r\n","import React from 'react';\r\nimport TestBoxScene from '../components/3dviewer/TestBoxScene';\r\nimport { Scatter, DataType as ScatterDataType } from '../components/chart/Scatter';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\ntype Props= {}\r\n\r\nexport class Scene1 extends React.Component<Props> {\r\n\r\n  private scatterRef = React.createRef<Scatter>();\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.onButtonClick = this.onButtonClick.bind(this);\r\n  }\r\n\r\n  private onButtonClick(): void {\r\n    const data: ScatterDataType = [];\r\n    for (let i=0; i < 10; i++) {\r\n      data.push({\r\n        x: Math.random(),\r\n        y: Math.random()\r\n      });\r\n    }\r\n    this.scatterRef.current!.setData(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TestBoxScene width={2000} height={800} cameraPos={{x: 5, y: 5, z: 5}} />\r\n        <Scatter ref={this.scatterRef} />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.onButtonClick}>\r\n          update data\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Scene1;\r\n","import React from 'react';\r\nimport { bubble as BurgerMenu } from 'react-burger-menu';\r\nimport Scene1 from '../../scene/Scene1';\r\nimport { render } from 'react-dom';\r\n\r\n\r\ninterface State {\r\n  isOpen: boolean;\r\n}\r\n\r\ninterface Styles {\r\n  bmBurgerBars: Partial<CSSStyleDeclaration>;\r\n  bmBurgerBarsHover: Partial<CSSStyleDeclaration>;\r\n  bmBurgerButton: Partial<CSSStyleDeclaration>;\r\n  bmCross: Partial<CSSStyleDeclaration>;\r\n  bmCrossButton: Partial<CSSStyleDeclaration>;\r\n  bmItemList: Partial<CSSStyleDeclaration>;\r\n  bmItem: Partial<CSSStyleDeclaration>;\r\n  bmMenuWrap: Partial<CSSStyleDeclaration>;\r\n  bmMenu: Partial<CSSStyleDeclaration>;\r\n  bmMorphShape: Partial<CSSStyleDeclaration>;\r\n  bmOverlay: Partial<CSSStyleDeclaration>;\r\n}\r\n\r\ninterface Props {\r\n  bodyClassName?: string;\r\n  burgerBarClassName?: string;\r\n  burgerButtonClassName?: string;\r\n  className?: string;\r\n  crossButtonClassName?: string;\r\n  crossClassName?: string;\r\n  customBurgerIcon?: JSX.Element | false;\r\n  customCrossIcon?: JSX.Element | false;\r\n  customOnKeyDown?(event: React.KeyboardEvent): void;\r\n  disableAutoFocus?: boolean;\r\n  disableCloseOnEsc?: boolean;\r\n  disableOverlayClick?: boolean;\r\n  htmlClassName?: string;\r\n  id?: string;\r\n  isOpen?: boolean;\r\n  itemClassName?: string;\r\n  itemListClassName?: string;\r\n  menuClassName?: string;\r\n  morphShapeClassName?: string;\r\n  noOverlay?: boolean;\r\n  onStateChange?(state: State): void;\r\n  // TODO (Rajab) This can be improved, though I do not know how. From PropTypes:\r\n  // styles && styles.outerContainer ? PropTypes.string.isRequired : PropTypes.string\r\n  outerContainerId?: string;\r\n  overlayClassName?: string;\r\n  // TODO (Rajab) This can be improved, though I do not know how. From PropTypes:\r\n  // styles && styles.pageWrap ? PropTypes.string.isRequired : PropTypes.string,\r\n  pageWrapId?: string;\r\n  right?: boolean;\r\n  styles?: Styles;\r\n  width?: number | string;\r\n}\r\n\r\nconst styles = {\r\n  bmBurgerButton: {\r\n    position: 'fixed',\r\n    width: '36px',\r\n    height: '30px',\r\n    left: '36px',\r\n    top: '36px'\r\n  },\r\n  bmBurgerBars: {\r\n    background: '#373a47'\r\n  },\r\n  bmBurgerBarsHover: {\r\n    background: '#a90000'\r\n  },\r\n  bmCrossButton: {\r\n    height: '24px',\r\n    width: '24px'\r\n  },\r\n  bmCross: {\r\n    background: '#bdc3c7'\r\n  },\r\n  bmMenuWrap: {\r\n    position: 'fixed',\r\n    height: '100%'\r\n  },\r\n  bmMenu: {\r\n    background: '#373a47',\r\n    padding: '0.5em 1.5em 0',\r\n    fontSize: '1.5em'\r\n  },\r\n  bmMorphShape: {\r\n    fill: '#373a47'\r\n  },\r\n  bmItemList: {\r\n    color: '#b8b7ad',\r\n    padding: '0.8em'\r\n  },\r\n  bmItem: {\r\n    display: 'inline-block',\r\n    padding: '0.6em',\r\n    color: '#fffce1',\r\n    outline: 'none'\r\n  },\r\n  bmOverlay: {\r\n    background: 'rgba(0, 0, 0, 0.3)'\r\n  }\r\n}\r\n\r\n\r\nexport class BubbleMenu extends React.Component<Props> {\r\n\r\n  private _SCENE_LIST: string[] = [\r\n    'Scene2', 'Scene3', 'Scene4'\r\n  ];\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const items = this._SCENE_LIST.map(e => {\r\n      return (\r\n        <a id={e} className=\"menu-item\" href=\"/\">{e}</a>\r\n      )\r\n    })\r\n    return (\r\n      <div className=\"App\">\r\n        <BurgerMenu\r\n          styles={styles}\r\n          onStateChange={this.onStateChange}\r\n        >\r\n          <a id='Scene1' className=\"menu-item\" href=\"#\" onClick={e => render(<Scene1/>, document.getElementById('scene'))}>Scene1</a>\r\n          {items}\r\n        </BurgerMenu>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  onStateChange = (state: State): void => {\r\n    console.log(state.isOpen);\r\n  }\r\n}\r\n\r\nexport default BubbleMenu;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport BubbleMenu from './components/menu/BubbleMenu';\r\nimport './App.css';\r\nimport Scene1 from './scene/Scene1';\r\n\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <BubbleMenu />\r\n      <div id='scene'></div>\r\n      <button onClick={e => render(<Scene1/>, document.getElementById('scene'))}>scene1</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}